const axios = require('axios');

async function testAdminOperations() {
    console.log('üîß Teste de Opera√ß√µes Admin via Servidor...\n');

    try {
        // Teste de health check
        console.log('1Ô∏è‚É£ Testando health check...');
        const healthResponse = await axios.get('http://localhost:3000/api/health');
        console.log('   ‚úÖ Health check:', healthResponse.data);

        // Teste de busca de eventos (deve funcionar)
        console.log('\n2Ô∏è‚É£ Testando busca de eventos...');
        const eventsResponse = await axios.get('http://localhost:3000/api/events');
        console.log('   ‚úÖ Eventos encontrados:', eventsResponse.data.length);

        // Teste de busca de fighters (deve funcionar)
        console.log('\n3Ô∏è‚É£ Testando busca de fighters...');
        const fightersResponse = await axios.get('http://localhost:3000/api/fighters');
        console.log('   ‚úÖ Fighters encontrados:', fightersResponse.data.length);

        // Teste de busca de fights (deve funcionar)
        console.log('\n4Ô∏è‚É£ Testando busca de fights...');
        const fightsResponse = await axios.get('http://localhost:3000/api/fights');
        console.log('   ‚úÖ Fights encontrados:', fightsResponse.data.length);

        // Teste de cria√ß√£o de evento (deve funcionar - admin)
        console.log('\n5Ô∏è‚É£ Testando cria√ß√£o de evento...');
        try {
            const createEventResponse = await axios.post('http://localhost:3000/api/events', {
                name: 'Test Event Admin',
                date: '2024-12-31T20:00:00',
                venue: 'Test Arena',
                location: 'Test City'
            });
            console.log('   ‚úÖ Evento criado:', createEventResponse.data.id);
            
            // Limpar o teste
            await axios.delete(`http://localhost:3000/api/events/${createEventResponse.data.id}`);
            console.log('   üßπ Evento de teste removido');
        } catch (error) {
            console.log('   ‚ùå Erro ao criar evento:', error.response?.data?.message || error.message);
        }

        console.log('\nüéâ Teste de opera√ß√µes admin conclu√≠do!');

    } catch (error) {
        console.error('‚ùå Erro no teste:', error.response?.data || error.message);
    }
}

testAdminOperations(); 